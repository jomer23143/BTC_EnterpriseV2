<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pb_rfid.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>